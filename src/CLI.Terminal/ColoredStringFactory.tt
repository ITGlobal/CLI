<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".Generated.cs" #>
using System;
using JetBrains.Annotations;

namespace ITGlobal.CommandLine
{
    partial class ColoredStringFactory
    {
        #region Xxx()

<# 
foreach (ConsoleColor color in Enum.GetValues(typeof(ConsoleColor)))
{
#>
        [Pure]
        public static ColoredString <#= color#>([NotNull] this string text)
            => Create(text, ConsoleColor.<#= color #>, null);

<#
}
#>
        #endregion

        #region OnXxx()

<# 
foreach (ConsoleColor color in Enum.GetValues(typeof(ConsoleColor)))
{
#>
        [Pure]
        public static ColoredString On<#= color#>([NotNull] this string text)
            => Create(text, null, ConsoleColor.<#= color #>);

<#
}
#>
        #endregion

        #region XxxOnYyy()

<# 
foreach (ConsoleColor foreground in Enum.GetValues(typeof(ConsoleColor)))
{
    foreach (ConsoleColor background in Enum.GetValues(typeof(ConsoleColor)))
    {
#>
        [Pure]
        public static ColoredString <#= foreground#>On<#= background #>([NotNull] this string text)
            => Create(text, ConsoleColor.<#= foreground #>, ConsoleColor.<#= background #>);

<# 
    }
}
#>
        #endregion
    }
}