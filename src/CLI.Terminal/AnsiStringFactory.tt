<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".Generated.cs" #>
using System;
using JetBrains.Annotations;

namespace ITGlobal.CommandLine
{
    partial class AnsiStringFactory
    {
        #region Xxx()

<# 
foreach (ConsoleColor color in Enum.GetValues(typeof(ConsoleColor)))
{
#>
        /// <summary>
        ///     Applies default foreground color <see cref="ConsoleColor.<#= color#>"/> to an <see cref="AnsiString"/>
        /// </summary>
        [Pure]
        public static AnsiString <#= color#>([NotNull] this AnsiString text)
            => Create(text, ConsoleColor.<#= color #>, null);

        /// <summary>
        ///     Creates an <see cref="AnsiString"/> from a <see cref="string"/>.
        ///     All characters will have their foreground colors set to <see cref="ConsoleColor.<#= color#>"/>
        /// </summary>
        [Pure]
        public static AnsiString <#= color#>([NotNull] this string text)
            => <#= color#>(AnsiString.Create(text));

<#
}
#>
        #endregion

        #region OnXxx()

<# 
foreach (ConsoleColor color in Enum.GetValues(typeof(ConsoleColor)))
{
#>
        /// <summary>
        ///     Applies default background color <see cref="ConsoleColor.<#= color#>"/> to an <see cref="AnsiString"/>
        /// </summary>
        [Pure]
        public static AnsiString On<#= color#>([NotNull] this AnsiString text)
            => Create(text, null, ConsoleColor.<#= color #>);

        /// <summary>
        ///     Creates an <see cref="AnsiString"/> from a <see cref="string"/>.
        ///     All characters will have their background colors set to <see cref="ConsoleColor.<#= color#>"/>
        /// </summary>
        [Pure]
        public static AnsiString On<#= color#>([NotNull] this string text)
            => On<#= color#>(AnsiString.Create(text));

<#
}
#>
        #endregion

        #region XxxOnYyy()

<# 
foreach (ConsoleColor foreground in Enum.GetValues(typeof(ConsoleColor)))
{
    foreach (ConsoleColor background in Enum.GetValues(typeof(ConsoleColor)))
    {
#>
        /// <summary>
        ///     Applies default foreground color <see cref="ConsoleColor.<#= foreground#>"/>
        ///     and default background color <see cref="ConsoleColor.<#= background#>"/> to an <see cref="AnsiString"/>
        /// </summary>
        [Pure]
        public static AnsiString <#= foreground#>On<#= background #>([NotNull] this AnsiString text)
            => Create(text, ConsoleColor.<#= foreground #>, ConsoleColor.<#= background #>);

          /// <summary>
        ///     Creates an <see cref="AnsiString"/> from a <see cref="string"/>.
        ///     All characters will have their foreground colors set to <see cref="ConsoleColor.<#= foreground#>"/>
        ///     and their background colors set to <see cref="ConsoleColor.<#= background#>"/>
        /// </summary>
        [Pure]
        public static AnsiString <#= foreground#>On<#= background #>([NotNull] this string text)
            => <#= foreground#>On<#= background #>(AnsiString.Create(text));
<# 
    }
}
#>
        #endregion
    }
}